#+TITLE: Some Ruby/Rails Interview Questions I Asked.

#+CAPTION: [[http://www.erlang.org/course/concurrent-programming][Share No memory]]
#+INCLUDE: logo.org


#+SUBTITLE: Ruby/Rails Interview Questions.
#+BIND: org-export-publishing-directory "../html/"

#+HTML_HEAD: <link id="pagestyle" rel="stylesheet" type="text/css" href="../css/org.css"/>


* Interview Questions:
** Which is your favourite programing language Compare and contrast it with Ruby or in case Ruby is the most favourite then contrast it with second favourite.
** How would you choose which language to use, do you give recommendations to clients ? How do you structure your recommendations?
** What is Ruby or other language really good for?
   -- Enough Fluff Questions.
** val = true and false vs val = true && false
** true ? "true" : "false"
  false ? "true" : "false"
  nil ? "true" : "false"
  [] ? "true" : "false"
** A hash has three keys "quick", "brown", "fox" and corresponding values are 'a','b','c'  sort the keys by length of the key this?
** What kind of code should controller have ?
** What are presenters ?
** Explain alias method chain ?
** What are concerns ?
** ActiveModel ?
** custom validator is rails ?
** single table Inheritance ?
** Default Scope?
** Ruby Questions 0
***  Ruby Compiled Or Interpreted.
***  Strongly typed vs Weakly Typed and Where does ruby fit in.
***  What is a Class, and in Ruby's Context.
***  Method Naming Conventions in ruby.(Not)
***  Self.
***  What is a singleton method / Eigen methods.
***  x = true and false vs x = true && false
***  Destructive Methods in ruby.
***  Short circuit and. &&
***  Unless something != revert if.
***  Global , Local and Instance Variables. (Other types class and class instance).
***  Can we access Class variable from a Instance of a ruby object.
***  What is an Object in OOP, and in Ruby Ruby.
***  Difference between Symbols and String.
***  How does nil and false differ.
***  Alias
***  Use of Super.
***  [1,1,2,2,3,3,3,4,4,4,4,4,5,5,5,5,5,6,6,7,7]
***  What is reflection ? Does ruby support it ?
***  Hierarchy of Ruby Objects. [Object, Kernel, Basic Object] What are they.
***  Why nil.object_id = 8 , true.object_id = 20, false.object_id = 0
***  Are you aware of Object Space ?
***  Difference Between extend, require , include and select.
***  Can we dynamically add a method to ruby  ?
***  Method Missing ? and Other Object Hooks.
***  What are Modules and why are they used ? i.e (Mixins).
***  Mixins Why  ?
***  Finally block in ruby , When is it executed ?
***  Do you know about code eval ? if yes difference in
***  Eval , class eval, instance eval ?
***  Exceptions handling in ruby how is it implemented. (begin/rescue etc).
***  Namespace in Ruby.
***  What is Duck Typing.
***  Difference Between Blocks , Procs and lambdas.
***  Closure Property in Ruby using procs and lambdas.
***  Class Instance Variable.
* Rails Questions
  * Why Rails.
  * What is the DRY Principle
  * What is an ORM.
  * Rails Model.
  * Validations , Observers , Callbacks.
  * Use Multiple Databases in ruby.
  * Single Table Inheritance (concert scenario).
  * Observers in rails 2 and now with rails 4 ?
  * Callbacks & validations difference and observers/concerns ?
  * Polymorphic Association
  * Eager Loading.
  * Sessions and Cookies
* Problem Solving Phone Screen Questions.
* Extras Based on Resume.
** Based of profile : like
   1. What is Agile Development.
   2. What were you doing as a scrum master, i.e roles and responsibilitie


#+INCLUDE: disqus.org
